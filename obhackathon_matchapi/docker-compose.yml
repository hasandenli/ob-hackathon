services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=survey_db
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./app/
        target: /usr/src/app
    restart: unless-stopped

  worker:
    build: .
    command: node src/worker.js
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=survey_db
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    volumes:
      - type: bind
        source: ./app/
        target: /usr/src/app
    working_dir: /usr/src/app
    restart: unless-stopped

  db:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=survey_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: 